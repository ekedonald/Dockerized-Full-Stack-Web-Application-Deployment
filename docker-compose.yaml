version: '3.8'
services:
 traefik:
  image: traefik:v2.10
  command:
   - "--api.insecure=false"
   - "--api.dashboard=true"
   - "--providers.docker=true"
   - "--providers.docker.exposedbydefault=false"
   - "--entrypoints.web.address=:80"
   - "--entrypoints.websecure.address=:443"
   - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
   - "--certificatesresolvers.myresolver.acme.email=eke.donalds@rocketmail.com"
   - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
   - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
   - "--log.level=DEBUG"
  ports:
   - "80:80"
   - "443:443"
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock:ro
   - ./letsencrypt:/letsencrypt
  labels:
   - "traefik.enable=true"
   - "traefik.http.routers.dashboard.rule=Host(`proxy.theikennaed.site`)"
   - "traefik.http.routers.dashboard.service=api@internal"
   - "traefik.http.routers.dashboard.entrypoints=websecure"
   - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
   - "traefik.http.routers.dashboard.middlewares=auth"
   - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$OQQPyFDs$$T4wR/8KZePEbdVeyP4RYO." # username: admin, password: tuesday
   - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
   - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
   - "traefik.http.middlewares.redirect-to-non-www.redirectregex.regex=^https?://www\\.(.*)"
   - "traefik.http.middlewares.redirect-to-non-www.redirectregex.replacement=https://$${1}"
   - "traefik.http.middlewares.redirect-to-non-www.redirectregex.permanent=true"
   - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
   - "traefik.http.routers.http-catchall.entrypoints=web"
   - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
 frontend:
  build:
   context: ./frontend
   args:
    - VITE_API_URL=https://theikennaed.site
  environment:
   - VITE_API_URL=https://theikennaed.site
  labels:
   - "traefik.enable=true"
   - "traefik.http.routers.frontend.rule=Host(`theikennaed.site`, `www.theikennaed.site`)"
   - "traefik.http.routers.frontend.middlewares=redirect-to-non-www"
   - "traefik.http.services.frontend.loadbalancer.server.port=80"
   - "traefik.http.routers.frontend.entrypoints=websecure"
   - "traefik.http.routers.frontend.tls.certresolver=myresolver"
 backend:
  build: ./backend
  env_file:
   - ./backend/.env
  labels:
   - "traefik.enable=true"
   - "traefik.http.routers.backend.rule=Host(`theikennaed.site`) && PathPrefix(`/api`, `/docs`, `/redoc`)"
   - "traefik.http.routers.backend.middlewares=redirect-to-non-www"
   - "traefik.http.services.backend.loadbalancer.server.port=8000"
   - "traefik.http.routers.backend.entrypoints=websecure"
   - "traefik.http.routers.backend.tls.certresolver=myresolver"
 database:
  image: postgres:13
  restart: always
  volumes:
   - postgres_data:/var/lib/postgresql/data
  environment:
   - POSTGRES_DB=app
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=changethis123
 adminer:
  image: adminer:4.8.1
  restart: always
  environment:
   - ADMINER_DEFAULT_SERVER=database
  labels:
   - "traefik.enable=true"
   - "traefik.http.routers.adminer.rule=Host(`db.theikennaed.site`)"
   - "traefik.http.routers.adminer.entrypoints=websecure"
   - "traefik.http.routers.adminer.tls.certresolver=myresolver"
   - "traefik.http.services.adminer.loadbalancer.server.port=8080"
volumes:
 postgres_data:
